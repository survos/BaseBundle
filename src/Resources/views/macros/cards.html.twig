{# some bootstrap-4 utilities for page elements.  In bootstrap3, these were panels.  #}

{% macro menu_card(menuCode, options) %}
    {% set o = optionsResolver({
        menuItem: false,
        table: false,
        project: null,
        footer: null,
        tourName: null,
        url: false,
        icon: false
    }, options) %}
    <div class="card card-card  card-project-dashboard img-rounded tour tour-{{ o.tourName }}"
         id="{{ menuCode }}"
         data-tour-title="{{ 'menu.%s.label'|format(menuCode)|trans }}"
         data-tour-content="{{ "menu.%s.description"|format(menuCode)|trans }}"
         data-tour-placement="top"
    >
        {% if o.menuItem %}
            {% set menuitem = o.menuItem %}
            <div class="card-heading">
                <div class="row">
                    <a href="{{ o.url }}">
                        <div class="col-xs-3">
                            <i class="{{ o.icon ? o.icon  }}"></i>
                        </div>
                        <div class="col-xs-9 float-right">

                    <span class="float-left " id="{{ menuitem.name }}_label"

                          {#
                          data-tour-content="{{ 'module.ongoing.survey.description'|trans }}"
                          #}
                    >
                        <div class="huge">{{ 'menu.%s.label'|format(menuCode)|trans }} </div>
                    </span>
                        </div>
                    </a>
                </div>
            </div>

            <div class="card-body" id="{{ menuCode }}_card">
                <div data-detail-level="2">
                    <div data-detail-level="4">
                        {# this depends on if it's a module block or an admin block!
                    <span class="float-right ">
                        <a target="_blank" href="{{ path('top_documentation', {path: '_admin-tasks/' ~ menuitem.name }) }}"><i class="{{ 'menu.documentation.icon'|trans }}"></i></a>
                    </span>
#}
                        {{ 'menu.%s.description'|format(menuitem.name)|trans }}
                        {{ 'menu.%s.body'|format(menuitem.name)|clean(true) }}
                    </div>

                    <p>
                    {{ 'menu.%s.intro'|format(menuitem.name)|clean(true) }}
                    </p>

                </div>
                <div data-detail-level="1">
                    {% if o.table %}
                        {{ o.table|raw }}
                    {% else %}
                        {{ knp_menu_render(menuitem, {
                            currentClass: 'highlight'}) }}
                    {% endif %}
                </div>
                {# remove menu, replace with tables, except for channels #}
            </div>
        {% endif %}

        {% if o.footer %}
            <div data-detail-level="3">
                <div class="card-footer">
                    {{ o.footer }}
                </div>
            </div>
        {% endif %}

    </div>
{% endmacro %}


{% macro iframe(iframe_url) %}
    <a href="{{ iframe_url }}" target="_blank">{{ iframe_url }}</a><br/>
    <iframe src="{{ iframe_url }}" width='80%' height="600">
        The source for {{ iframe_url }} should be here.
    </iframe>
{% endmacro %}

{% macro pane(options) %}
    {% import _self as macros %}


    {% set options = optionsResolver({
        'color': 'default',
        'title' : '',
        'title_link': null,
        'translation_domain': 'messages',
        'title_parameters': {},
        'addTour': false,
        'tourName': null,
        'onTour': {tour: false},
        'slider': 0,
        'zoom' : 1,
        'controls' : '',
        'header' : '',
        'icon': null,
        'api': false,
        'class': 'card-warning',
        'edit_link': null,
        'toggle_switch' : false,
        'toggle_switch_on' : false,
        'toggle_switch_text' : 'Admin Controls',
        'bodyClass': '',
        'id': null,
        'content': null,
        'collapsable': true,
        'collapsed': false
    }, options|default({})) %}

    {% set id = options.id %}
    {% set content = options.content %}

    {# hack to handle old way #}
    {% if options.class in ['no-padding', 'primary'] %}
        {% set options = options|merge({'class': 'card-primary'}) %}
    {% endif %}

    {% set tourOptions = optionsResolver({
        tour: false,
        content: 'pane.%s.tourContent'|format(id)|trans,
        title: 'pane.%s.label'|format(id)|trans,
        placement: 'top'
    }, options.onTour) %}

    <div{% if id is not empty %} id="{{ id }}"{% endif %} class="{{ tourOptions.tour ? 'tour tour-'~ tourOptions.tour  }} card card-{{ options.class }} {{ options.class }}"
            {% if tourOptions.tour %}
                data-tour-content="{{ tourOptions.content }}"
                data-tour-title="{{ tourOptions.title}}"
                data-tour-placement="{{ tourOptions.placement}}"
            {% endif %}

    >
        <div class="card card-heading card-header text-primary card-info clearfix">
            <a name="{{ id }}_anchor"></a>


            {% set tourName = options.tourName ?: (id ~ '_tour') %}
            {% if options.addTour %}
                <a href="#"
                   title="{{ 'menu.tour.description'|trans }}"
                   data-tour-name="{{ tourName  }}"
                   class="tour-starter" >
                    <i class="{{ 'menu.tour.icon'|trans }}"></i>
                </a>
            {% endif %}
            {% if options.header %}
                <h1>HEADER DEBUG {{ options.header }}</h1>
            {% endif %}

            {% if options.icon %}
                <span class="pane_icon" id="{{ id }}_pane_icon">
                    <i class="{{ options.icon }} fa-fw"></i>
                </span>
            {% endif %}


            {% set title = options.title %}
            {% if not title %}
                {% set title = 'pane.%s.label'|format(id) %}
            {% endif %}

            {% if options.translation_domain %}
                {%  set title = title|trans(options.title_parameters) %}
            {% endif %}

            <div class="card border-success mb-3">

                <div class="card-header bg-info text-white border-success">

                    <div class="float-right card-title">
                        {% if title %}
                            <h5 style="display: inline;" >{{ title|raw }}</h5>
                        {% endif %}


                        {% if options.edit_link %}
                            {{ macros.card_edit(options.edit_link) }}
                        {% endif %}
                        {% if options.api %}
                            <div class="float-right">
                                {% set dataUrl = path(options.api.call, options.api.filter) %}
                                <a href="javascript:void(0)"><i class="fab fa-file-excel export-to-csv" data-api="{{ dataUrl }}"> CSV Export</i> </a>
                            </div>
                        {% endif %}
                        {% if options.slider %}
                            <div id="{{ id }}_slider" class="zoomslider_wrapper {# tour tour-{{ tourName }} #}"
                                 title="{{ id }} Zoom"
                                 data-slider-container="{{ id  }}"
                                 data-tour-title="{{ tourName }} Zoom Control"
                                 data-tour-placement="{{ tourOptions.placement }}"
                                 data-tour-content="Zoom in for more details, including schedule and enrollment information. Try it now?"
                            >
                                <i class="fa fa-search-minus slider-left"></i>
                                <label>
                                    <input type="range" data-default-value="{{ options.zoom }}" class="zoomslider" list="tickmarks" min="0" max="{{ options.slider }}" step="1" />
                                </label>

                                {#
                                <datalist id="tickmarks">
                                    {% for tick in range(1, options.slider) %}
                                        <option value="{{ tick }}" />
                                    {% endfor %}
                                </datalist>
                                #}
                                <i class="fas fa-search-plus slider-right"></i>
                            </div>
                        {% endif %}

                        {#

                        {% if options.toggle_switch %}
                            <div id='{{ id }}_toggle_switch' class="pane_toggle_switch tour"
                                 title="Admin Toggle Switch"
                                 data-tour-placement="left"
                                 data-tour-content="Toggle this to turn on admin controls. Try it now!"
                            >
                                <input type="checkbox" class="bootstrap-switch "
                                       name="{{ id }}_toggle_switch" {{ options.toggle_switch_on ? ' checked' }} />
                                <span class="text-switch">
                                    {{ options.toggle_switch_text }}
                                </span>
                            </div>
                        {% endif %}
                        #}


                {% if options.collapsable %}
                    <button id="{{ id  }}_collapse_button" type="button" class="btn btn-info btn-xs collapse_pane_button pull-right "
                            data-toggle="collapse" data-target="#{{ id }}_body"
                            title="Collapse"
                            data-tour-placement="left"
                            data-tour-content="Hide or show this card. Try it now!"
                    >
                        <i class="fas fa-caret-down"></i>
                    </button>
                {% endif %}
                    </div>
                </div>

                <div class="collapse {{ options.collapsed ? 'collapsed' : 'show' }}" id="{{ id }}_body">

                    <div class="card-body text-success">
                        {% if options.controls %}
                            <div class="card-header" id="{{ id }}_pane_header_controls">
                                {{ options.controls|raw }}
                            </div>
                        {% endif %}

                        <div{% if id is not empty %} {% endif %}
                                data-detail-level="1"
                                class="card-body {{ options.bodyClass }}">
                            {{ content|raw }}
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-success">End of {{ id }} Panel</div>
                </div>
            </div>


        </div>

    </div>
{% endmacro %}

{% macro card(header, body, icon, color, options, class) %}
    {% import _self as widgets %}
    {% set bodyClass = body.class is defined ? body.class : 'card-danger' %}
    {% set body = body.content is defined ? body.content : body %}
    {% set header = header.title is defined ? header.title : header %}
    {{ widgets.pane(options.id|default(null), body, options|default({})|merge({title: header, icon: icon, color: color, class: class, bodyClass: bodyClass})) }}
{% endmacro %}

{% macro rst_cell(string, width) %}
    {% set xformat = "%d.%ds"|format(width, width) %}
    {{ ("% " ~ xformat)|format(string) }}
{% endmacro %}

{% macro dataTable(options) %}
    {% set options = optionsResolver({
        'id': null,
        'title': null,
        'data' : null,
        'url': null,
        'data_extra_columns': null,
    }, options) %}
    {% if options.title %}<h3>{{ options.title }}</h3>{% endif %}
    {% if options.url %}
        <table class="table table-striped table-condensed table-bordered"
                {%- if options.id %} id="{{ options.id }}" {% endif -%}
                {%- if options.data_extra_columns %} data-extra-columns="{{ options.data_extra_columns }}" {% endif -%}
               data-ajax="{{ options.url }}">
        </table>
    {% endif %}
    {#
    {{ options.data|length ? tabledump(options.data) }}
    #}
{% endmacro %}

{% macro val_or_array_to_table(array, popup, label, class) %}
    {% import _self as wdgts %}

    {% set result %}
        <table class="table table-condensed table-striped{% if class is defined %} {{ class }}{% endif %}">
            {% if array is iterable %}
                {% for a,v in array %}
                    <tr>
                        <th>{{ a }}</th>
                        <td>
                            {% if v is iterable %}
                                {{ wdgts.val_or_array_to_table(v) }}
                            {% else %}
                                {{ v }}
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
            {% else %}
                {{ array }}
            {% endif %}
        </table>
    {% endset %}
    {% if popup and array is iterable %}
        <button type="button" class="btn btn-xs btn-success" data-placement="auto" data-toggle="popover" data-trigger="click" title="{{ label|default('') }}" data-content='{{ result }}'>{{ label|default('<i class="fa fa-eye"></i>')|raw }}</button>
    {% else %}
        {{ result }}
    {% endif %}

{% endmacro %}

{% macro todoBullet(complete, sizeClass) %}
    {% if complete %}
        <i class="text-success fa fa-check-square-o {{ sizeClass|default('fa-2x') }}"></i>
    {% else %}
        <i class="text-danger fa fa-square-o {{ sizeClass|default('fa-2x') }}"></i>
    {% endif %}
{% endmacro %}

{% macro icon(type, class, attrs) %}
    <i class="fa fa-{{ type }} {{ class|default('') }}" {% for var,val in attrs|default([])  %}{{ var }}="{{ val }}" {% endfor %}></i>
{% endmacro %}

{% macro badge(text, class) %}
    <span class="badge {{ class }}">{{ text }}</span>
{% endmacro %}

{% macro fa(type, banned, attrs) %}
    {% import _self as macros %}

    {% if banned|default(false) %}
        <span class="fa-stack">
            {{ macros.icon(type, 'fa-stack-1x') }}
            {{ macros.icon('ban', 'fa-stack-2x text-danger') }}
        </span>
    {% else %}
        {{ macros.icon(type, '', attrs) }}
    {% endif %}
{% endmacro %}

{% macro label(text, type) %}
    <span class="label label-{{ type|default('info') }}">{{ text }}</span>
{% endmacro %}

{# this is a good candidate for an underscore template #}
{% macro card_edit(url, class, zoom) %}
    {% import _self as macros %}

    {% if is_granted('ROLE_OWNER') %}
        <a class="edit-link btn btn-xs {{ class|default('float-right') }}" href='{{ url }}' {{ zoom ? 'data-detail-level="%s"'|format(slider) }}>
            {{ macros.fa('pencil') }}
        </a>
    {% endif %}
{% endmacro %}

{% macro widget_edit(url) %}
    {% import _self as macros %}

    <a class="button-icon jarviswidget-edit-btn" href='{{ url }}'>
        {{ macros.fa('cog') }}
    </a>
{% endmacro %}

{# this could also be attr, a hash of {class: 'row-visible', target: '_blank'} #}
{% macro fa_link(url, fa_icon, class, target, text) %}
    {% import _self as macros %}

    <a {% if target %}target="{{ target }}"{% endif %}
            {% if class %}class="{{ class }}"{% endif %}
       href="{{ url }}">{{ macros.fa(fa_icon) }} {{ text }}</a>
{% endmacro %}

{% macro dt(prompt, response, link) %}
    {% if response != '' %}
        <dt>{{ prompt }}</dt>
        <dd>
            {% if response is iterable %}
                {{ response|json_encode }}
            {% elseif response == '' %}
                <i>-</i>
            {% else %}
                {% if link %}
                    <a href="{{ link }}">{{ response }}</a>
                {% else %}
                    {{ response }}
                {% endif %}
            {% endif %}</dd>
    {% endif %}
{% endmacro %}

{# returns the elements necessary for the tour.  ID is key to translations #}
{% macro tour(tourOptions) %}
{% endmacro %}

{% macro tr(prompt, response, link, options) %}
    {% set o = optionsResolver({
        nowrap: false,
        externalLink: false,
        onTour: false,
    }, options) %}

    {% if o.onTour %}
        {% set tourOptions = tourOptions(prompt, o.onTour) %}
    {% endif %}

    {% set nowrap = o.nowrap %}
    {# could also set external Link of link begins with http #}
    {% if response != '' %}
        <tr {% if o.onTour %} id="{{ tourOptions.id }}_tr" class="tour tour-{{ tourOptions.tour }}"
            data-tour-title="{{ tourOptions.title }}"
            data-tour-content="{{ tourOptions.content }}"
            data-tour-placement="{{ tourOptions.placement }}"
        {% endif %}
        >
            <th {% if nowrap|default(false) %}class="no-wrap"{% endif %}>{{ prompt }}</th>
            <td>

                {% if response == '' %}
                    <i>-</i>
                {% else %}
                    {% if link %}
                        <a href="{{ link }}" {{ o.externalLink ? 'target="_blank"' }}">{{ response }} {{ o.externalLink ? '<i class="fa fa-external-link"></i>' }}</a>
                    {% else %}
                        {{ response|raw }}
                    {% endif %}
                {% endif %}
            </td>
        </tr>
    {% endif %}
{% endmacro %}

{% macro survey(survey) %}
    {% set id = "%s_survey"|format(survey.code) %}
    <a id="{{ id }}" title="{{ id }}"
       href="{{ path('survey_show', survey.routeParams) }}">
        <i class="fa fa-check"></i> {{ survey.display }}</a>
{% endmacro %}



{% macro entityTable(options) %}
    {% import _self as macros %}

    {% set options = optionsResolver({
        'wave': null,
        'survey': null,
        'member': null,
        extraColumns: false,
        class: null,
        marking: null,
    }, options|default({}), ['api', 'id']) %}

    {% set api = options.api %}
    {% set api = optionsResolver({
        call: null,
        filter: {},
        groups: {},
        properties: {}
    }, options.api) %}
    {# todo: add groups and properties #}
    {% if api.call %}
        {% set dataUrl = path(api.call, api.filter) %}
    {% endif %}


    {% set id = options.id %}

    {% if app.debug %}
        <code>{{ id }}</code><i class="fa fa-rss"></i> {{ api.call ?  api|json_encode }} {{ dataUrl }}
        <br />
    {% endif %}
    <table
            id="{{ id }}"
            {% if options.extraColumns %}data-extra-columns='{{ options.extraColumns|json_encode }}'{% endif %}
            data-ajax="{{ dataUrl }}"
            data-api="{{ api|json_encode }}"
            class="table table-striped no-wrap {{ options.class  }}"
    >
    </table>


{% endmacro %}


